{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/preact/dist/preact.esm.js","webpack:///./src/i18n.js","webpack:///./node_modules/preact-i18n/dist/preact-i18n.esm.js","webpack:///./node_modules/preact-i18n/src/lib/util.js","webpack:///./node_modules/preact-i18n/src/lib/template.js","webpack:///./node_modules/preact-i18n/src/lib/translate.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/dlv/dist/dlv.umd.js","webpack:///./node_modules/localforage/dist/localforage.js","webpack:///./src/my-requests.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","lastSimple","child","simple","children","arguments","length","push","pop","undefined","String","key","vnode","extend","obj","props","defer","Promise","resolve","then","bind","setTimeout","cloneElement","slice","IS_NON_DIMENSIONAL","items","enqueueRender","component","_dirty","debounceRendering","rerender","list","renderComponent","isNamedNode","node","normalizedNodeName","toLowerCase","getNodeProps","defaultProps","removeNode","parentNode","removeChild","setAccessor","old","isSvg","style","cssText","test","innerHTML","__html","useCapture","replace","substring","addEventListener","eventProxy","removeEventListener","_listeners","e","setProperty","removeAttribute","ns","removeAttributeNS","setAttributeNS","setAttribute","className","this","type","event","mounts","diffLevel","isSvgMode","hydrating","flushMounts","afterMount","componentDidMount","diff","dom","context","mountAll","parent","componentRoot","ownerSVGElement","ret","idiff","appendChild","out","prevSvgMode","splitText","_component","nodeValue","document","createTextNode","replaceChild","recollectNodeTree","vnodeName","originalComponent","oldDom","isDirectOwner","_componentConstructor","isOwner","_parentComponent","constructor","setComponentProps","base","unmountComponent","createComponent","nextBase","buildComponentFromVNode","createElementNS","createElement","firstChild","fc","vchildren","a","nextSibling","isHydrating","j","f","vchild","originalChildren","childNodes","keyed","keyedLen","min","len","childrenLen","vlen","_child","__key","trim","insertBefore","innerDiffNode","dangerouslySetInnerHTML","attrs","diffAttributes","unmountOnly","ref","removeChildren","lastChild","next","previousSibling","components","Ctor","inst","render","Component","doRender","splice","state","opts","_disable","__ref","componentWillMount","componentWillReceiveProps","prevContext","prevProps","syncComponentUpdates","isChild","rendered","cbase","previousProps","previousState","prevState","previousContext","isUpdate","initialBase","initialChildComponent","skip","shouldComponentUpdate","componentWillUpdate","getChildContext","toUnmount","childComponent","childProps","baseParent","componentRef","t","unshift","componentDidUpdate","afterUpdate","_renderCallbacks","beforeUnmount","componentWillUnmount","inner","collectComponent","merge","setState","callback","forceUpdate","preact","id","scope","fields","plural","fallback","_translate2","default","I18N_DEFINITION","_translate","defined","assign","URL_FLAG","IntlProvider","Component$$1","apply","__proto__","create","definition","mark","intl","dictionary","deepAssign","target","source","location","match","preact__WEBPACK_IMPORTED_MODULE_0__","intl$1","Child","currentFields","EMPTY","template","replacer","field","parts","split","v","translate","dlv__WEBPACK_IMPORTED_MODULE_1___default","none","one","singular","some","many","other","HighlightI18N","ref$1","dictionaryKey","title","Text","translateMapping","onlyTextNodes","properties","selected","val","select","def","Localizer","MarkupText","Html","html","withText","mapping","translations","translate_translate","dlv_umd_default","g","Function","eval","window","require","u","Error","code","1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","observe","characterData","data","setImmediate","MessageChannel","scriptEl","onreadystatechange","documentElement","channel","port1","onmessage","port2","postMessage","queue","oldQueue","task","self","2","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","TypeError","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","getThen","thenable","onError","onSuccess","result","tryCatch","status","error","reason","all","iterable","toString","values","Array","resolved","allResolver","outValue","race","response","3","4","_typeof","Symbol","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","Blob","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","console","warn","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","arrayBuff","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_binStringToArrayBuffer","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","ready","initPromises","ignoreErrors","_defaultConfig","k","_support","isSafari","openDatabase","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","store","req","openCursor","iterationNumber","cursor","getItem","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","readAsBinaryString","removeItem","clear","count","advanced","advance","keys","dropInstance","currentConfig","config","isCurrentDb","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","_forage","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","buffer","bytes","bufferToString","base64String","localforageSerializer","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","webSQLStorage","dbInfoPromise","description","size","serializer","item","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","storeNames","getAllStoreNames","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","_key","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","driverObject","complianceError","driverMethods","driverMethodName","isRequired","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","localforage_js","_preactI18n","RequestList","_this","_possibleConstructorReturn","getPrototypeOf","requests","_localforage2","reference","catch","log","clearRequests","buildCsv","_preact2","_this2","request_rows","forEach","request","recipient","date","slug","href","BASE_URL","_i18n2","via","download_filename","URL","hostname","Date","toISOString","onClick","createObjectURL","download","_this3","csv","join","_this4","confirm","getElementById"],"mappings":"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","file":"my-requests.gen.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 68);\n","/** Virtual DOM Node */\nfunction VNode() {}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nvar options = {\n\n\t/** If `true`, `prop` changes trigger synchronous component updates.\n  *\t@name syncComponentUpdates\n  *\t@type Boolean\n  *\t@default true\n  */\n\t//syncComponentUpdates: true,\n\n\t/** Processes all created VNodes.\n  *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n  */\n\t//vnode(vnode) { }\n\n\t/** Hook invoked after a component is mounted. */\n\t// afterMount(component) { }\n\n\t/** Hook invoked after the DOM is updated with a component's latest render. */\n\t// afterUpdate(component) { }\n\n\t/** Hook invoked immediately before a component is unmounted. */\n\t// beforeUnmount(component) { }\n};\n\nvar stack = [];\n\nvar EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nfunction h(nodeName, attributes) {\n\tvar children = EMPTY_CHILDREN,\n\t    lastSimple,\n\t    child,\n\t    simple,\n\t    i;\n\tfor (i = arguments.length; i-- > 2;) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children != null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop !== undefined) {\n\t\t\tfor (i = child.length; i--;) {\n\t\t\t\tstack.push(child[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof child === 'boolean') child = null;\n\n\t\t\tif (simple = typeof nodeName !== 'function') {\n\t\t\t\tif (child == null) child = '';else if (typeof child === 'number') child = String(child);else if (typeof child !== 'string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length - 1] += child;\n\t\t\t} else if (children === EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t} else {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tvar p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes == null ? undefined : attributes;\n\tp.key = attributes == null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode !== undefined) options.vnode(p);\n\n\treturn p;\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nfunction extend(obj, props) {\n  for (var i in props) {\n    obj[i] = props[i];\n  }return obj;\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\nvar defer = typeof Promise == 'function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virutal DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nfunction cloneElement(vnode, props) {\n  return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);\n}\n\n// DOM properties that should NOT have \"px\" added when numeric\nvar IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n/** Managed queue of dirty components to be re-rendered */\n\nvar items = [];\n\nfunction enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component) == 1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\nfunction rerender() {\n\tvar p,\n\t    list = items;\n\titems = [];\n\twhile (p = list.pop()) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hyrdating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nfunction isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined;\n  }\n  if (typeof vnode.nodeName === 'string') {\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName;\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nfunction isNamedNode(node, nodeName) {\n  return node.normalizedNodeName === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nfunction getNodeProps(vnode) {\n  var props = extend({}, vnode.attributes);\n  props.children = vnode.children;\n\n  var defaultProps = vnode.nodeName.defaultProps;\n  if (defaultProps !== undefined) {\n    for (var i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i];\n      }\n    }\n  }\n\n  return props;\n}\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nfunction createNode(nodeName, isSvg) {\n\tvar node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nfunction removeNode(node) {\n\tvar parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nfunction setAccessor(node, name, old, value, isSvg) {\n\tif (name === 'className') name = 'class';\n\n\tif (name === 'key') {\n\t\t// ignore\n\t} else if (name === 'ref') {\n\t\tif (old) old(null);\n\t\tif (value) value(node);\n\t} else if (name === 'class' && !isSvg) {\n\t\tnode.className = value || '';\n\t} else if (name === 'style') {\n\t\tif (!value || typeof value === 'string' || typeof old === 'string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value === 'object') {\n\t\t\tif (typeof old !== 'string') {\n\t\t\t\tfor (var i in old) {\n\t\t\t\t\tif (!(i in value)) node.style[i] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i in value) {\n\t\t\t\tnode.style[i] = typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false ? value[i] + 'px' : value[i];\n\t\t\t}\n\t\t}\n\t} else if (name === 'dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t} else if (name[0] == 'o' && name[1] == 'n') {\n\t\tvar useCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t} else {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t} else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n\t\tsetProperty(node, name, value == null ? '' : value);\n\t\tif (value == null || value === false) node.removeAttribute(name);\n\t} else {\n\t\tvar ns = isSvg && name !== (name = name.replace(/^xlink\\:?/, ''));\n\t\tif (value == null || value === false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());else node.removeAttribute(name);\n\t\t} else if (typeof value !== 'function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);else node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n\ttry {\n\t\tnode[name] = value;\n\t} catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nvar mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nvar diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nvar isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nvar hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nfunction flushMounts() {\n\tvar c;\n\twhile (c = mounts.pop()) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nfunction diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent != null && parent.ownerSVGElement !== undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom != null && !('__preactattr_' in dom);\n\t}\n\n\tvar ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode !== parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (! --diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tvar out = dom,\n\t    prevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode == null || typeof vnode === 'boolean') vnode = '';\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode === 'string' || typeof vnode === 'number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText !== undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue != vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t} else {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout['__preactattr_'] = true;\n\n\t\treturn out;\n\t}\n\n\t// If the VNode represents a Component, perform a component diff:\n\tvar vnodeName = vnode.nodeName;\n\tif (typeof vnodeName === 'function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName === 'svg' ? true : vnodeName === 'foreignObject' ? false : isSvgMode;\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) {\n\t\t\t\tout.appendChild(dom.firstChild);\n\t\t\t} // if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\tvar fc = out.firstChild,\n\t    props = out['__preactattr_'],\n\t    vchildren = vnode.children;\n\n\tif (props == null) {\n\t\tprops = out['__preactattr_'] = {};\n\t\tfor (var a = out.attributes, i = a.length; i--;) {\n\t\t\tprops[a[i].name] = a[i].value;\n\t\t}\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length === 1 && typeof vchildren[0] === 'string' && fc != null && fc.splitText !== undefined && fc.nextSibling == null) {\n\t\tif (fc.nodeValue != vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc != null) {\n\t\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML != null);\n\t\t}\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tvar originalChildren = dom.childNodes,\n\t    children = [],\n\t    keyed = {},\n\t    keyedLen = 0,\n\t    min = 0,\n\t    len = originalChildren.length,\n\t    childrenLen = 0,\n\t    vlen = vchildren ? vchildren.length : 0,\n\t    j,\n\t    c,\n\t    f,\n\t    vchild,\n\t    child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len !== 0) {\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar _child = originalChildren[i],\n\t\t\t    props = _child['__preactattr_'],\n\t\t\t    key = vlen && props ? _child._component ? _child._component.__key : props.key : null;\n\t\t\tif (key != null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = _child;\n\t\t\t} else if (props || (_child.splitText !== undefined ? isHydrating ? _child.nodeValue.trim() : true : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = _child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen !== 0) {\n\t\tfor (var i = 0; i < vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tvar key = vchild.key;\n\t\t\tif (key != null) {\n\t\t\t\tif (keyedLen && keyed[key] !== undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (!child && min < childrenLen) {\n\t\t\t\t\tfor (j = min; j < childrenLen; j++) {\n\t\t\t\t\t\tif (children[j] !== undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\t\tif (j === childrenLen - 1) childrenLen--;\n\t\t\t\t\t\t\tif (j === min) min++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child !== dom && child !== f) {\n\t\t\t\tif (f == null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t} else if (child === f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t} else {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (var i in keyed) {\n\t\t\tif (keyed[i] !== undefined) recollectNodeTree(keyed[i], false);\n\t\t}\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min <= childrenLen) {\n\t\tif ((child = children[childrenLen--]) !== undefined) recollectNodeTree(child, false);\n\t}\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nfunction recollectNodeTree(node, unmountOnly) {\n\tvar component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t} else {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node['__preactattr_'] != null && node['__preactattr_'].ref) node['__preactattr_'].ref(null);\n\n\t\tif (unmountOnly === false || node['__preactattr_'] == null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nfunction removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tvar next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tvar name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name] != null) && old[name] != null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name !== 'children' && name !== 'innerHTML' && (!(name in old) || attrs[name] !== (name === 'value' || name === 'checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nvar components = {};\n\n/** Reclaim a component for later re-use by the recycler. */\nfunction collectComponent(component) {\n\tvar name = component.constructor.name;\n\t(components[name] || (components[name] = [])).push(component);\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nfunction createComponent(Ctor, props, context) {\n\tvar list = components[Ctor.name],\n\t    inst;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t} else {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\tif (list) {\n\t\tfor (var i = list.length; i--;) {\n\t\t\tif (list[i].constructor === Ctor) {\n\t\t\t\tinst.nextBase = list[i].nextBase;\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn inst;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nfunction setComponentProps(component, props, opts, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tif (component.__ref = props.ref) delete props.ref;\n\tif (component.__key = props.key) delete props.key;\n\n\tif (!component.base || mountAll) {\n\t\tif (component.componentWillMount) component.componentWillMount();\n\t} else if (component.componentWillReceiveProps) {\n\t\tcomponent.componentWillReceiveProps(props, context);\n\t}\n\n\tif (context && context !== component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (opts !== 0) {\n\t\tif (opts === 1 || options.syncComponentUpdates !== false || !component.base) {\n\t\t\trenderComponent(component, 1, mountAll);\n\t\t} else {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tif (component.__ref) component.__ref(component);\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nfunction renderComponent(component, opts, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tvar props = component.props,\n\t    state = component.state,\n\t    context = component.context,\n\t    previousProps = component.prevProps || props,\n\t    previousState = component.prevState || state,\n\t    previousContext = component.prevContext || context,\n\t    isUpdate = component.base,\n\t    nextBase = component.nextBase,\n\t    initialBase = isUpdate || nextBase,\n\t    initialChildComponent = component._component,\n\t    skip = false,\n\t    rendered,\n\t    inst,\n\t    cbase;\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (opts !== 2 && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t} else if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tvar childComponent = rendered && rendered.nodeName,\n\t\t    toUnmount,\n\t\t    base;\n\n\t\tif (typeof childComponent === 'function') {\n\t\t\t// set up high order component link\n\n\t\t\tvar childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor === childComponent && childProps.key == inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, 1, context, false);\n\t\t\t} else {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, 0, context, false);\n\t\t\t\trenderComponent(inst, 1, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t} else {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || opts === 1) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base !== initialBase && inst !== initialChildComponent) {\n\t\t\tvar baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base !== baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tvar componentRef = component,\n\t\t\t    t = component;\n\t\t\twhile (t = t._parentComponent) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.unshift(component);\n\t} else if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, previousContext);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\tif (component._renderCallbacks != null) {\n\t\twhile (component._renderCallbacks.length) {\n\t\t\tcomponent._renderCallbacks.pop().call(component);\n\t\t}\n\t}\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nfunction buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tvar c = dom && dom._component,\n\t    originalComponent = c,\n\t    oldDom = dom,\n\t    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n\t    isOwner = isDirectOwner,\n\t    props = getNodeProps(vnode);\n\twhile (c && !isOwner && (c = c._parentComponent)) {\n\t\tisOwner = c.constructor === vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, 3, context, mountAll);\n\t\tdom = c.base;\n\t} else {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, 1, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom !== oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nfunction unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tvar base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tvar inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t} else if (base) {\n\t\tif (base['__preactattr_'] && base['__preactattr_'].ref) base['__preactattr_'].ref(null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\tcollectComponent(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tif (component.__ref) component.__ref(null);\n}\n\n/** Base Component class.\n *\tProvides `setState()` and `forceUpdate()`, which trigger rendering.\n *\t@public\n *\n *\t@example\n *\tclass MyFoo extends Component {\n *\t\trender(props, state) {\n *\t\t\treturn <div />;\n *\t\t}\n *\t}\n */\nfunction Component(props, context) {\n\tthis._dirty = true;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.context = context;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.props = props;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.state = this.state || {};\n}\n\nextend(Component.prototype, {\n\n\t/** Returns a `boolean` indicating if the component should re-render when receiving the given `props` and `state`.\n  *\t@param {object} nextProps\n  *\t@param {object} nextState\n  *\t@param {object} nextContext\n  *\t@returns {Boolean} should the component re-render\n  *\t@name shouldComponentUpdate\n  *\t@function\n  */\n\n\t/** Update component state by copying properties from `state` to `this.state`.\n  *\t@param {object} state\t\tA hash of state properties to update with new values\n  *\t@param {function} callback\tA function to be called once component state is updated\n  */\n\tsetState: function setState(state, callback) {\n\t\tvar s = this.state;\n\t\tif (!this.prevState) this.prevState = extend({}, s);\n\t\textend(s, typeof state === 'function' ? state(s, this.props) : state);\n\t\tif (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/** Immediately perform a synchronous re-render of the component.\n  *\t@param {function} callback\t\tA function to be called after component is re-rendered.\n  *\t@private\n  */\n\tforceUpdate: function forceUpdate(callback) {\n\t\tif (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);\n\t\trenderComponent(this, 2);\n\t},\n\n\n\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n  *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n  *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n  *\t@param {object} state\t\tThe component's current state\n  *\t@param {object} context\t\tContext object (if a parent component has provided context)\n  *\t@returns VNode\n  */\n\trender: function render() {}\n});\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nfunction render(vnode, parent, merge) {\n  return diff(merge, vnode, {}, false, parent, false);\n}\n\nvar preact = {\n\th: h,\n\tcreateElement: h,\n\tcloneElement: cloneElement,\n\tComponent: Component,\n\trender: render,\n\trerender: rerender,\n\toptions: options\n};\n\nexport { h, h as createElement, cloneElement, Component, render, rerender, options };\nexport default preact;\n//# sourceMappingURL=preact.esm.js.map\n","import translate from 'preact-i18n/src/lib/translate';\n\nexport default function t(id, scope = '', fields = {}, plural = null, fallback = '') {\n    return translate(id, scope, I18N_DEFINITION, fields, plural, fallback);\n}\n","import { Component, cloneElement, h } from 'preact';\nimport delve from 'dlv';\n\n/** Check if an object is not null or undefined\n *\t@private\n */\nfunction defined(obj) {\n\treturn obj!==null && obj!==undefined;\n}\n\n\n/** A simpler Object.assign\n *  @private\n */\nfunction assign(obj, props) {\n\tfor (var i in props) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\n\n/** Recursively copy keys from `source` to `target`, skipping truthy values already in `target`.\n *\t@private\n */\nfunction deepAssign(target, source) {\n\tvar out = assign({}, target);\n\tfor (var i in source) {\n\t\tif (source.hasOwnProperty(i)) {\n\t\t\tif (target[i] && source[i] && typeof target[i]==='object' && typeof source[i]==='object') {\n\t\t\t\tout[i] = deepAssign(target[i], source[i]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[i] = target[i] || source[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n/** select('foo,bar') creates a mapping: `{ foo, bar }`\n *\t@private\n */\nfunction select(properties) {\n\tproperties = properties || {};\n\tif (typeof properties==='string') {\n\t\tproperties = properties.split(',');\n\t}\n\tif ('join' in properties) {\n\t\tvar selected = {};\n\t\tfor (var i=0; i<properties.length; i++) {\n\t\t\tvar val = properties[i].trim();\n\t\t\tif (val) { selected[val.split('.').pop()] = val; }\n\t\t}\n\t\treturn selected;\n\t}\n\treturn properties;\n}\n\nvar URL_FLAG = /[?&#]intl=show/;\n\n\n/** `<IntlProvider>` is a nestable internationalization definition provider.\n *\tIt exposes an Intl scope & definition into the tree,\n *\tmaking them available to descendant components.\n *\n *\t> **Note:** When nested, gives precedence to keys higher up the tree!\n *\t> This means lower-level components can set their defaults by wrapping themselves\n *\t> in an `<IntlProvider>`, but still remain localizable by their parent components.\n *\n *\t@name IntlProvider\n *\t@param props\n *\t@param {String} [props.scope]\t\t\tNest `definition` under a root key, and set the active scope for the tree (essentially prefixing all `<Text />` keys).\n *\t@param {Boolean} [props.mark=false]\t\tIf `true`, all `<Text>` elements will be shown with a red/green background indicating whether they have valid Intl keys.\n *\t@param {Object} [props.definition={}]\tMerge the given definition into the current intl definition, giving the *current* definition precedence (i.e., only adding keys, acting as defaults)\n *\n *\t@example\n *\t// generally imported from a JSON file:\n *\tlet definition = {\n *\t\tfoo: 'Le Feux'\n *\t};\n *\n *\t<IntlProvider scope=\"weather\" definition={definition}>\n *\t\t<Text key=\"foo\">The Foo</Text>\n *\t</IntlProvider>\n *\n *\t// This will render the text:\n *\t\"Le Feux\"\n */\nvar IntlProvider = (function (Component$$1) {\n\tfunction IntlProvider () {\n\t\tComponent$$1.apply(this, arguments);\n\t}\n\n\tif ( Component$$1 ) IntlProvider.__proto__ = Component$$1;\n\tIntlProvider.prototype = Object.create( Component$$1 && Component$$1.prototype );\n\tIntlProvider.prototype.constructor = IntlProvider;\n\n\tIntlProvider.prototype.getChildContext = function getChildContext () {\n\t\tvar ref = this.props;\n\t\tvar scope = ref.scope;\n\t\tvar definition = ref.definition;\n\t\tvar mark = ref.mark;\n\t\tvar intl = assign({}, this.context.intl || {});\n\n\t\t// set active scope for the tree if given\n\t\tif (scope) { intl.scope = scope; }\n\n\t\t// merge definition into current with lower precedence\n\t\tif (definition) {\n\t\t\tintl.dictionary = deepAssign(intl.dictionary || {}, definition);\n\t\t}\n\n\t\tif (mark || (typeof location!=='undefined' && String(location).match(URL_FLAG))) {\n\t\t\tintl.mark = true;\n\t\t}\n\n\t\treturn { intl: intl };\n\t};\n\n\tIntlProvider.prototype.render = function render (ref) {\n\t\tvar children = ref.children;\n\n\t\treturn children && children[0] || null;\n\t};\n\n\treturn IntlProvider;\n}(Component));\n\n/**\n * Higher-order function that creates an `<IntlProvider />` wrapper component for the given component.  It\n * takes two forms depending on how many arguments it's given:\n * It can take a functional form like:\n * intl(ComponentToWrap, options)\n *\n * or it can take an annotation form like:\n * @intl(options)\n * class ComponentToWrap extends Component {}\n *\n *\t@param {Component or Object} args[0] If there are two arguments, the first argument is the Component to wrap in `<IntlProvider/>`. If there is just one argument, this is the options object to pass as `props` to `<IntlProvider/>`. See the definition of the options param below for details.\n *\t@param {Object} options If there are two arguments, the second argument is Passed as `props` to `<IntlProvider />`\n *\t@param [options.scope]\t\t\tNest `definition` under a root key, and set the active scope for the tree (essentially prefixing all `<Text />` keys).\n *\t@param [options.definition={}]\tMerge the given definition into the current intl definition, giving the *current* definition precedence (i.e., only adding keys, acting as defaults)\n */\nfunction intl$1(Child, options) {\n\tif (arguments.length<2) {\n\t\toptions = Child;\n\t\treturn function (Child) { return intl$1(Child, options); };\n\t}\n\treturn function IntlProviderWrapper(props) {\n\t\treturn h(\n\t\t\tIntlProvider,\n\t\t\toptions || {},\n\t\t\th(Child, props)\n\t\t);\n\t};\n}\n\nvar EMPTY = {};\n\nvar currentFields;\n\n/** Populate {{template.fields}} within a given string.\n *\n *\t@private\n *\t@param {String} template\tThe string containing fields to be resolved\n *\t@param {Object} [fields={}]\tOptionally nested object of fields, referencable from `template`.\n *\t@example\n *\t\ttemplate('foo{{bar}}', { bar:'baz' }) === 'foobaz'\n */\nfunction template(template, fields) {\n\tcurrentFields = fields || EMPTY;\n\treturn template && template.replace(/\\{\\{([\\w.-]+)\\}\\}/g, replacer);\n}\n\n/** Replacement callback for injecting fields into a String\n *\t@private\n */\nfunction replacer(s, field) {\n\tvar parts = field.split('.'),\n\t\tv = currentFields;\n\tfor (var i=0; i<parts.length; i++) {\n\t\tv = v[parts[i]];\n\t\tif (v == null) { return ''; } // eslint-disable-line eqeqeq\n\t}\n\t// allow for recursive {{config.xx}} references:\n\tif (typeof v==='string' && v.match(/\\{\\{/)) {\n\t\tv = template(v, currentFields);\n\t}\n\treturn v;\n}\n\n/** Attempts to look up a translated value from a given dictionary.\n *  Also supports json templating using the format: {{variable}}\n *\tFalls back to default text.\n *\n *\t@private\n *\t@param {String} id\t\t\t\tIntl field name/id (subject to scope)\n *\t@param {String} [scope='']\t\tScope, which prefixes `id` with `${scope}.`\n *\t@param {Object} dictionary\t\tA nested object containing translations\n *\t@param {Object} [fields={}]\t\tTemplate fields for use by translated strings\n *\t@param {Number} [plural]\t\tIndicates a quantity, used to trigger pluralization\n *\t@param {String} [fallback='']\tText to return if no translation is found\n *\t@returns {String} translated\n */\nfunction translate(id, scope, dictionary, fields, plural, fallback) {\n\tif (scope) { id = scope + '.' + id; }\n\n\tvar value = dictionary && delve(dictionary, id);\n\n\t// plural forms:\n\t// key: ['plural', 'singular']\n\t// key: { none, one, many }\n\t// key: { singular, plural }\n\tif ((plural || plural===0) && value && typeof value==='object') {\n\t\tif (value.splice) {\n\t\t\tvalue = value[plural] || value[0];\n\t\t}\n\t\telse if (plural===0 && defined(value.none)) {\n\t\t\tvalue = value.none;\n\t\t}\n\t\telse if (plural===1 && defined(value.one || value.singular)) {\n\t\t\tvalue = value.one || value.singular;\n\t\t}\n\t\telse {\n\t\t\tvalue = value.some || value.many || value.plural || value.other || value;\n\t\t}\n\t}\n\n\treturn value && template(value, fields) || fallback || null;\n}\n\n/** Highlight/colorize the i18n'd node if `mark` is set on `intl` in context.  If not, just returns `value`\n *\n *\t@private\n *\t@param {String|VNode} value\tThe l10n'd text/vnode to highlight or pass through\n *\t@param {string} id\tThe key used to lookup the value in the intl dictionary\n */\nfunction HighlightI18N(ref, ref$1) {\n\tvar value = ref.value;\n\tvar id = ref.id;\n\tvar intl = ref$1.intl;\n\n\n\tif (intl && intl.mark) {\n\t\tvar dictionaryKey = \"dictionary\" + (intl && intl.scope ? (\".\" + (intl.scope)) : '') + \".\" + id;\n\t\treturn h('mark', {\n\t\t\tstyle: 'background: ' + (\n\t\t\t\tvalue\n\t\t\t\t\t? delve(intl, dictionaryKey)\n\t\t\t\t\t\t? 'rgba(119,231,117,.5)'      // Green = this string is fully internationalized\n\t\t\t\t\t\t: 'rgba(229,226,41,.5)'       // Yellow = this string does not have a value in the dictionary, but it has a fallback value\n\t\t\t\t\t: 'rgba(228,147,51,.5)'         // Red = this string has no value and no fallback\n\t\t\t),\n\t\t\ttitle: id\n\t\t}, value);\n\t}\n\n\treturn \tvalue ;\n}\n\n/** `<Text>` renders internationalized text.\n *\tIt attempts to look up translated values from a dictionary in context.\n *\n *\tTemplate strings can contain `{{field}}` placeholders,\n *\twhich injects values from the `fields` prop.\n *\n *\tWhen string lookup fails, renders its children as fallback text.\n *\n *\t@param {Object} props\t\t\t\tprops\n *\t@param {String} props.id\t\t\tKey to look up in intl dictionary, within any parent scopes (`$scope1.$scope2.$id`)\n *\t@param {Object} [props.fields={}]\tValues to inject into template `{{fields}}`\n *\t@param {Number} [props.plural]\t\tInteger \"count\", used to select plural forms\n *\t@param {Object} context\n *\t@param {Object} context.intl\t\t[internal] dictionary and scope info\n *\n *\t@example\n *\t// If there is no dictionary in context..\n *\t<Text id=\"foo\">The Foo</Text>\n *\t// ..produces the text:\n *\t\"The Foo\"\n *\n *\t@example\n *\t// Given a dictionary and some fields..\n *\t<IntlProvider definition={{ foo:'Le Feux {{bar}}' }}>\n *\t\t<Text id=\"foo\" fields={{ bar: 'BEAR' }}>The Foo</Text>\n *\t</IntlProvider>\n *\t// ..produces the text:\n *\t\"Le Feux BEAR\"\n *\n *\t@example\n *\t// Within a scope, both `id` and the definition are namespaced..\n *\t<IntlProvider scope=\"weather\" definition={{ foo:'Le Feux' }}>\n *\t\t<Text id=\"foo\">The Foo</Text>\n *\t</IntlProvider>\n *\t// ..produces the text:\n *\t\"Le Feux\"\n */\nfunction Text(ref, ref$1) {\n\tvar id = ref.id;\n\tvar children = ref.children;\n\tvar plural = ref.plural;\n\tvar fields = ref.fields;\n\tvar intl = ref$1.intl;\n\n\n\tvar fallback = children && children[0];\n\n\tvar value = translate(\n\t\tid,\n\t\tintl && intl.scope,\n\t\tintl && intl.dictionary,\n\t\tfields,\n\t\tplural,\n\t\tfallback\n\t);\n\n\treturn h( HighlightI18N, { id: id, value: value });\n}\n\n/** Translates the property values in an Object, returning a copy.\n *\t**Note:** By default, `String` keys will be treated as Intl ID's.\n *\tPass `true` to return an Object containing *only* translated\n *\tvalues where the prop is a <Text /> node.\n *\n *\t@private\n *\t@param {Object} props\tAn object with values to translate\n *\t@param {Object} intl\tAn intl context object (eg: `context.intl`)\n *\t@param {Boolean} [onlyTextNodes=false]\tOnly process `<Text />` values\n *\t@returns {Object} translatedProps\n */\nfunction translateMapping(props, intl, onlyTextNodes) {\n\tvar out = {};\n\tintl = intl || {};\n\tprops = select(props);\n\tfor (var name in props) {\n\t\tif (props.hasOwnProperty(name) && props[name]) {\n\t\t\tvar def = props[name];\n\n\t\t\t// if onlyTextNodes=true, skip any props that aren't <Text /> vnodes\n\t\t\tif (!onlyTextNodes && typeof def==='string') {\n\t\t\t\tout[name] = translate(def, intl.scope, intl.dictionary);\n\t\t\t}\n\t\t\telse if (def.nodeName===Text) {\n\t\t\t\t// it's a <Text />, just grab its props:\n\t\t\t\tdef = assign({\n\t\t\t\t\tfallback: def.children && def.children[0]\n\t\t\t\t}, def.attributes);\n\t\t\t\tout[name] = translate(def.id, intl.scope, intl.dictionary, def.fields, def.plural, def.fallback);\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n/** `<Localizer />` is a Compositional Component.\n *\tIt \"renders\" out any `<Text />` values in its child's props.\n *\n *\t@name Localizer\n *\t@param {Object} props\n *\t@param {Object} props.children\tChild components with props to localize.\n *\t@param {Object} context\n *\t@param {Object} context.intl\t\t[internal] dictionary and scope info\n *\t@example\n *\t<Localizer>\n *\t\t<input placeholder={<Text id=\"username.placeholder\" />} />\n *\t</Localizer>\n *\t// produces:\n *\t<input placeholder=\"foo\" />\n *\n *\t@example\n *\t<Localizer>\n *\t\t<abbr title={<Text id=\"oss-title\">Open Source Software</Text>}>\n *\t\t\t<Text id=\"oss\">OSS</Text>\n *\t\t</abbr>\n *\t</Localizer>\n *\t// produces:\n *\t<abbr title=\"Open Source Software\">OSS</abbr>\n */\nfunction Localizer(ref, ref$1) {\n\tvar children = ref.children;\n\tvar intl = ref$1.intl;\n\n\tvar child = children && children[0];\n\treturn child && cloneElement(child, translateMapping(child.attributes, intl, true));\n}\n\n/* eslint-disable react/no-danger */\n\n/** `<MarkupText>` is just like {@link Text} but it can also contain html markup in rendered strings.  It wraps its contents in a `<span>` tag.\n *\n *\t@param {Object} props\t\t\t\tprops\n *\t@param {String} props.id\t\t\tKey to look up in intl dictionary, within any parent scopes (`$scope1.$scope2.$id`)\n *\t@param {Object} [props.fields={}]\tValues to inject into template `{{fields}}`\n *\t@param {Number} [props.plural]\t\tInteger \"count\", used to select plural forms\n *\t@param {Object} context\n *\t@param {Object} context.intl\t\t[internal] dictionary and scope info\n *\n *\t@example\n *\t// If there is no dictionary in context..\n *\t<MarkupText id=\"foo\"><b>The Foo</b></MarkupText>\n *\t// ..produces the vnode:\n *\t<span><b>The Foo</b></span>\n *\n *\t@example\n *\t// Given a dictionary and some fields..\n *\t<IntlProvider definition={{ foo:'Le Feux <b>{{bar}}</b>' }}>\n *\t\t<MarkupText id=\"foo\" fields={{ bar: 'BEAR' }}>The Foo</MarkupText>\n *\t</IntlProvider>\n *\t// ..produces the vnode:\n *\t<span>Le Feux <b>BEAR</b></span>\n *\n *\t@example\n *\t// Within a scope, both `id` and the definition are namespaced..\n *\t<IntlProvider scope=\"weather\" definition={{ foo:'Le <a href=\"http://foo.com\">Feux</a>' }}>\n *\t\t<MarkupText id=\"foo\">The Foo</MarkupText>\n *\t</IntlProvider>\n *\t// ..produces the vnode:\n *\t<span>Le <a href=\"http://foo.com\">Feux</a></span>\n *\n *\t@example\n *\t// renders nothing if there is no key match and no fallback\n *\t<div><MarkupText /></div>\n *\t// ..produces the vnode:\n *\t<div/>\n */\nfunction MarkupText(props) {\n\treturn (\n\t\th( Localizer, null,\n\t\t\th( Html, { html: h( Text, props), id: props.id })\n\t\t)\n\t);\n}\n\nfunction Html(ref) {\n\tvar html = ref.html;\n\tvar id = ref.id;\n\n\tvar value = !html ? html : typeof html === 'string' ? h( 'span', { dangerouslySetInnerHTML: { __html: html } }) : h( 'span', null, html );\n\treturn h( HighlightI18N, { id: id, value: value });\n}\n\n/** `@withText()` is a Higher Order Component, often used as a decorator.\n *\n *\tIt wraps a child component and passes it translations\n *\tbased on a mapping to the dictionary & scope in context.\n *\n *\t@param {Object|Function|String} mapping\t\tMaps prop names to intl keys (or `<Text>` nodes).\n *\n *\t@example @withText({\n *\t\tplaceholder: 'user.placeholder'\n *\t})\n *\tclass Foo {\n *\t\t// now the `placeholder` prop is our localized String:\n *\t\trender({ placeholder }) {\n *\t\t\treturn <input placeholder={placeholder} />\n *\t\t}\n *\t}\n *\n *\t@example @withText({\n *\t\tplaceholder: <Text id=\"user.placeholder\">fallback text</Text>\n *\t})\n *\tclass Foo {\n *\t\trender({ placeholder }) {\n *\t\t\treturn <input placeholder={placeholder} />\n *\t\t}\n *\t}\n *\n *\t@example @withText('user.placeholder')\n *\tclass Foo {\n *\t\t// for Strings/Arrays, the last path segment becomes the prop name:\n *\t\trender({ placeholder }) {\n *\t\t\treturn <input placeholder={placeholder} />\n *\t\t}\n *\t}\n *\n *\t@example\n *\t// Works with functional components, too:\n *\tconst Foo = withText('user.placeholder')( props =>\n *\t\t<input placeholder={props.placeholder} />\n *\t)\n */\nfunction withText(mapping) {\n\treturn function withTextWrapper(Child) {\n\t\treturn function WithTextWrapper(props, context) {\n\t\t\tvar map = typeof mapping==='function' ? mapping(props, context) : mapping;\n\t\t\tvar translations = translateMapping(map, context.intl);\n\t\t\treturn h(Child, assign(assign({}, props), translations));\n\t\t};\n\t};\n}\n\nintl$1.intl = intl$1;\nintl$1.IntlProvider = IntlProvider;\nintl$1.Text = Text;\nintl$1.MarkupText = MarkupText;\nintl$1.Localizer = Localizer;\nintl$1.withText = withText;\n\nexport { intl$1 as intl, IntlProvider, Text, MarkupText, Localizer, withText };export default intl$1;\n//# sourceMappingURL=preact-i18n.esm.js.map\n","/** Check if an object is not null or undefined\n *\t@private\n */\nexport function defined(obj) {\n\treturn obj!==null && obj!==undefined;\n}\n\n\n/** A simpler Object.assign\n *  @private\n */\nexport function assign(obj, props) {\n\tfor (let i in props) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\n\n/** Recursively copy keys from `source` to `target`, skipping truthy values already in `target`.\n *\t@private\n */\nexport function deepAssign(target, source) {\n\tlet out = assign({}, target);\n\tfor (let i in source) {\n\t\tif (source.hasOwnProperty(i)) {\n\t\t\tif (target[i] && source[i] && typeof target[i]==='object' && typeof source[i]==='object') {\n\t\t\t\tout[i] = deepAssign(target[i], source[i]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[i] = target[i] || source[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n/** select('foo,bar') creates a mapping: `{ foo, bar }`\n *\t@private\n */\nexport function select(properties) {\n\tproperties = properties || {};\n\tif (typeof properties==='string') {\n\t\tproperties = properties.split(',');\n\t}\n\tif ('join' in properties) {\n\t\tlet selected = {};\n\t\tfor (let i=0; i<properties.length; i++) {\n\t\t\tlet val = properties[i].trim();\n\t\t\tif (val) selected[val.split('.').pop()] = val;\n\t\t}\n\t\treturn selected;\n\t}\n\treturn properties;\n}\n","const EMPTY = {};\n\nlet currentFields;\n\n/** Populate {{template.fields}} within a given string.\n *\n *\t@private\n *\t@param {String} template\tThe string containing fields to be resolved\n *\t@param {Object} [fields={}]\tOptionally nested object of fields, referencable from `template`.\n *\t@example\n *\t\ttemplate('foo{{bar}}', { bar:'baz' }) === 'foobaz'\n */\nexport default function template(template, fields) {\n\tcurrentFields = fields || EMPTY;\n\treturn template && template.replace(/\\{\\{([\\w.-]+)\\}\\}/g, replacer);\n}\n\n/** Replacement callback for injecting fields into a String\n *\t@private\n */\nfunction replacer(s, field) {\n\tlet parts = field.split('.'),\n\t\tv = currentFields;\n\tfor (let i=0; i<parts.length; i++) {\n\t\tv = v[parts[i]];\n\t\tif (v == null) return ''; // eslint-disable-line eqeqeq\n\t}\n\t// allow for recursive {{config.xx}} references:\n\tif (typeof v==='string' && v.match(/\\{\\{/)) {\n\t\tv = template(v, currentFields);\n\t}\n\treturn v;\n}\n","import delve from 'dlv';\nimport { defined } from './util';\nimport template from './template';\n\n/** Attempts to look up a translated value from a given dictionary.\n *  Also supports json templating using the format: {{variable}}\n *\tFalls back to default text.\n *\n *\t@private\n *\t@param {String} id\t\t\t\tIntl field name/id (subject to scope)\n *\t@param {String} [scope='']\t\tScope, which prefixes `id` with `${scope}.`\n *\t@param {Object} dictionary\t\tA nested object containing translations\n *\t@param {Object} [fields={}]\t\tTemplate fields for use by translated strings\n *\t@param {Number} [plural]\t\tIndicates a quantity, used to trigger pluralization\n *\t@param {String} [fallback='']\tText to return if no translation is found\n *\t@returns {String} translated\n */\nexport default function translate(id, scope, dictionary, fields, plural, fallback) {\n\tif (scope) id = scope + '.' + id;\n\n\tlet value = dictionary && delve(dictionary, id);\n\n\t// plural forms:\n\t// key: ['plural', 'singular']\n\t// key: { none, one, many }\n\t// key: { singular, plural }\n\tif ((plural || plural===0) && value && typeof value==='object') {\n\t\tif (value.splice) {\n\t\t\tvalue = value[plural] || value[0];\n\t\t}\n\t\telse if (plural===0 && defined(value.none)) {\n\t\t\tvalue = value.none;\n\t\t}\n\t\telse if (plural===1 && defined(value.one || value.singular)) {\n\t\t\tvalue = value.one || value.singular;\n\t\t}\n\t\telse {\n\t\t\tvalue = value.some || value.many || value.plural || value.other || value;\n\t\t}\n\t}\n\n\treturn value && template(value, fields) || fallback || null;\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):e.dlv=n()}(this,function(){return function(e,n,t,o){for(o=0,n=n.split?n.split(\".\"):n;e&&o<n.length;)e=e[n[o++]];return void 0===e?t:e}});\n//# sourceMappingURL=dlv.umd.js.map\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.1\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [name], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","import preact from 'preact';\nimport { IntlProvider, Text, MarkupText } from 'preact-i18n';\nimport t from 'i18n';\nimport localforage from 'localforage';\n\nclass RequestList extends preact.Component {\n    constructor(props) {\n        super(props);\n        this.state = { requests: {} };\n\n        // TODO: Is there a better place for this?\n        localforage.config({\n            'name': 'Datenanfragen.de', // TODO: Use the actual domain here?\n            'storeName': 'my-requests'\n        });\n        let requests = {};\n        localforage.iterate((data, reference) => { requests[reference] = data; })\n            .then(() => { this.setState({ requests: requests }); })\n            .catch(() => { console.log('Could not get requests.'); /* TODO: Proper error handling. */ });\n\n        this.clearRequests = this.clearRequests.bind(this);\n        this.buildCsv = this.buildCsv.bind(this);\n    }\n\n    render() {\n        let request_rows = [];\n        Object.keys(this.state.requests).forEach((reference) => {\n            let request = this.state.requests[reference];\n            if(!request) return;\n            let recipient = request.recipient.split('\\n', 1)[0];\n            request_rows.push(<tr><td>{request.date}</td><td>{request.slug ? <a href={BASE_URL + 'company/' + request.slug}>{recipient}</a> : recipient}</td><td>{reference}</td><td>{t(request.type, 'my-requests')}</td><td>{t(request.via, 'my-requests')}</td></tr>);\n        });\n\n        let download_filename = (new URL(BASE_URL)).hostname.replace('www.', '') + '_export_' + (new Date()).toISOString().substring(0, 10) + '.csv';\n\n        return (\n            <IntlProvider scope=\"my-requests\" definition={I18N_DEFINITION}>\n                <main>\n                    <h1><Text id=\"title\" /></h1>\n                    <p><MarkupText id=\"explanation\" /></p>\n                    <p><MarkupText id=\"explanation-saving\" /></p>\n                    <table className='table'>\n                        <thead><th><Text id=\"date\" /></th><th><Text id=\"recipient\" /></th><th><Text id=\"reference\" /></th><th><Text id=\"type\" /></th><th><Text id=\"via\" /></th></thead>\n                        <tbody>{request_rows}</tbody>\n                    </table>\n                    { /* TODO: Style differently once we have a design. */ }\n                    <button id=\"clear-button\" onClick={this.clearRequests} style=\"float: right;\"><Text id=\"delete-all-btn\" /></button>\n                    <a id=\"download-button\" className=\"button\" href={URL.createObjectURL(this.buildCsv())} download={download_filename} style=\"float: right; margin-right: 10px;\"><Text id=\"export-btn\" /></a>\n                    <div className='clearfix' />\n                </main>\n            </IntlProvider>\n        );\n    }\n\n    buildCsv() {\n        let csv = 'date;slug;recipient;reference;type;via\\r\\n';\n        Object.keys(this.state.requests).forEach((reference) => {\n            let request = this.state.requests[reference];\n            csv += [ request.date, request.slug, request.recipient.replace(/[\\r\\n]+/g, ', '), reference, request.type, request.via ].join(';') + '\\r\\n';\n        });\n\n        return new Blob([csv], { type: 'text/csv;charset=utf-8' });\n    }\n\n    clearRequests() {\n        if(window.confirm(t('delete-all-confirm', 'my-requests'))) {\n            localforage.clear()\n                .then(() => { this.setState({ requests: {} }); })\n                .catch((err) => { console.log('Could not clear requests: ' + err); /* TODO: Proper error handling. */});\n        }\n    }\n}\n\npreact.render((<RequestList/>), null, document.getElementById('my-requests'));\n"],"sourceRoot":""}